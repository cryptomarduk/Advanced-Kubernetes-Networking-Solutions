apiVersion: networking.istio.io/v1alpha3
kind: ServiceEntry
metadata:
  name: backend-remote-cluster
  namespace: istio-system
spec:
  hosts:
  - "backend.cluster2.global"
  location: MESH_INTERNAL
  ports:
  - number: 80
    name: http
    protocol: HTTP
  - number: 443
    name: https
    protocol: HTTPS
  resolution: DNS
  addresses:
  # Virtual IP allocated to the service
  - 240.0.0.2
  endpoints:
  # Address of the Istio ingress gateway in cluster2
  - address: cluster2-ingress.example.com
    ports:
      http: 80
      https: 443
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: backend-cross-cluster
  namespace: default
spec:
  hosts:
  - "backend.cluster2.global"
  http:
  - route:
    - destination:
        host: backend.cluster2.global
        port:
          number: 80
    retries:
      attempts: 3
      perTryTimeout: 2s
      retryOn: connect-failure,refused-stream,gateway-error
---
apiVersion: multicluster.k8s.io/v1alpha1
kind: ServiceExport
metadata:
  name: backend-service
  namespace: backend
spec:
  # Optional: specific rules for exporting the service
  rules:
  - type: Headless
    ports:
    - port: 80
      protocol: TCP
  - type: LoadBalancer
    ports:
    - port: 443
      protocol: TCP
---
apiVersion: multicluster.k8s.io/v1alpha1
kind: ServiceImport
metadata:
  name: backend-service
  namespace: backend
spec:
  type: ClusterSetIP
  ports:
  - port: 80
    protocol: TCP
  ips:
  - 240.0.0.2
  clusters:
  - cluster2
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service-global
  namespace: backend
  annotations:
    multicluster.kubernetes.io/service-export: "true"
spec:
  selector:
    app: backend
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP
